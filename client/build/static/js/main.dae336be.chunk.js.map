{"version":3,"sources":["utils/auth.js","components/Nav/index.js","components/SplashHeader/index.js","components/AudioPlayer/music/G6_-24_db_for_web_test.m4a","components/AudioPlayer/music/128-Waterfalls.m4a","components/AudioPlayer/music/175-Reverb-study.m4a","components/AudioPlayer/index.js","utils/helpers.js","utils/queries.js","utils/mutations.js","actions/art-scroller-actions/index.js","components/ArtScroller/index.js","actions/led-actions/index.js","components/BigLedBox/index.js","pages/Home.js","pages/Login.js","actions/login-form-actions/index.js","pages/Signup.js","actions/signup-form-actions/index.js","App.js","serviceWorkerRegistration.js","reducers/isLoggedIn.js","reducers/ledChange.js","reducers/sketchOne.js","reducers/sketchTwo.js","reducers/loginFormReducer.js","reducers/signupFormReducer.js","reducers/artScrollerReducer.js","reducers/index.js","index.js"],"names":["decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","Nav","Auth","loggedIn","style","display","justifyContent","className","to","color","textDecoration","href","marginLeft","onClick","logout","marginRight","SplashHeader","textAlign","AudioPlayerComponent","useState","G6","currentSong","setCurrentSong","songs","trackName","filePath","trackListStyle","cursor","listStyle","marginBottom","padding","transition","borderRadius","trackListStylePlaying","textShadow","backgroundColor","border","handleTrackChange","event","target","id","volumeState","setVolumeState","autoPlay","preload","src","onPlay","e","console","log","volume","onVolumeChange","data","value","handleVolumeChange","flexDirection","htmlFor","marginTop","borderTop","width","margin","map","song","getRandomIntLimit","_min","_max","min","Math","ceil","max","floor","random","idbPromise","storeName","method","object","Promise","resolve","reject","db","transaction","store","request","indexedDB","open","onupgradeneeded","result","createObjectStore","keyPath","onerror","onsuccess","objectStore","error","put","all","getAll","delete","_id","oncomplete","close","USER_QUERY","gql","GET_PRESETS","GET_GIFS_CREATE_AND_OR_UPDATE","LOGIN","ADD_USER","UPDATE_USER_DEFAULT_PRESET","getGifs","type","payload","ArtScroller","leftInitButtonSpring","useSpring","config","wobbly","delay","from","opacity","scrollerOnOffButtonSpring","dispatchREDUX","useDispatch","getGifsQueryResponse","useQuery","useEffect","a","then","res","undefined","getGifsCreateAndOrUpdate","forEach","gif","catch","updateIDBGifs","gifs","useSelector","state","artScroller","handleRefetch","persist","key","figureIsOnState","setFigureIsOnState","parentElement","refetch","navigator","onLine","animationDurationState","setAnimationDurationState","verticalPositionState","setVerticalPositionState","horizontalPositionState","setHorizontalPositionState","scrollerCircleWidth","setScrollerCircleWidth","invertState","setInvertState","button","onKeyPress","name","onChange","index","alt","gifSrc","position","zIndex","filter","animationName","animationDuration","animationDelay","animationTimingFunction","animationDirection","animationIterationCount","top","left","presetSwitch","BigLedBox","rainbowButtonSpring","V2ButtonSpring","wavesButtonSpring","spiralButtonSpring","fourSpiralsButtonSpring","saveButtonSpring","userQueryResponse","presetQueryResponse","i","getPresets","length","user","defaultPreset","presetName","ledChange","leds","rows","useMutation","updateUserDefaultPreset","preventDefault","presetString","children","firstChild","split","variables","push","ledNumber","createLedObjectsArray","num","rowNumber","createLedRowsArray","disabled","row","led","Home","AudioPlayer","Login","loginFormState","loginForm","email","password","emailIsComplete","passwordIsComplete","login","handleChange","loginEmailCompleted","loginPasswordChange","loginPasswordCompleted","mutationResponse","onSubmit","placeholder","autoComplete","Signup","signupFormState","signupForm","username","usernameIsComplete","addUser","signupUsernameCompleted","signupEmailChange","signupEmailCompleted","signupPasswordChange","signupPasswordCompleted","client","ApolloClient","operation","gotToken","setContext","headers","authorization","uri","App","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","isLoggedInReducer","action","ledChangeReducer","alpha","animationDelayState","isInverted","newState","isAnimating","sketchOneReducer","isOn","sketchTwoReducer","loginFormReducer","signupFormReducer","artScrollerReducer","isOnState","scrollInterval","searchTerms","searchIsValid","allReducers","combineReducers","isLoggedIn","sketchOne","sketchTwo","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.dae336be.chunk.js","sourcesContent":["import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    const token = localStorage.getItem('id_token');\n    if (token) {\n      return token;\n    } else {\n      return false;\n    }\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","//REACT IMPORTS\nimport React from 'react';\n\n//AUTH\nimport Auth from '../../utils/auth.js';\n\n//LINK\nimport { Link } from 'react-router-dom';\n\n//STYLES\nimport './navStyles.css';\n\nconst Nav = () => {\n\n  function displayNav() {\n    if (Auth.loggedIn()) \n    {\n      return (\n        <section\n          style={{\n            display: 'flex',\n            justifyContent: 'center'\n          }}\n          className=\"nav-container\"\n        >\n          <div>\n            <Link \n              to=\"/\"\n              style={{\n                color: 'white',\n                textDecoration: 'none'\n              }}\n              className=\"nav-button\"\n            >\n              <span\n                style={{\n                  textDecoration: 'none',\n                  color: 'white',\n                }}\n              >\n                Home\n              </span>\n            </Link>\n          </div>\n          <div>\n            <a \n              href=\"/\"\n              style={{\n                textDecoration: 'none',\n                color: 'white',\n                marginLeft: '5px'\n              }}\n              className=\"nav-button\"\n              onClick={() => {\n                Auth.logout()\n              }}\n            >\n              Logout\n            </a>\n          </div>\n        </section>\n      );\n    } \n    else\n    {\n      return (\n        <section \n          style={{\n            display: 'flex',\n            justifyContent: 'center'\n          }}\n          className=\"nav-container\"\n        >\n          <div>\n            <Link \n              to=\"/\"\n              style={{\n                color: 'white',\n                textDecoration: 'none',\n                marginRight: '5px',\n                marginLeft: '5px'\n              }}\n              className=\"nav-button\"\n            >\n              Home\n            </Link>\n          </div>\n          <div>\n            <Link \n              to=\"/signup\"\n              style={{\n                color: 'white',\n                textDecoration: 'none',\n                marginRight: '5px',\n                marginLeft: '5px'\n              }}\n              className=\"nav-button\"\n            >\n              Sign Up\n            </Link>\n          </div>\n          <div>\n            <Link \n              to=\"/login\"\n              style={{\n                color: 'white',\n                textDecoration: 'none',\n                marginLeft: '5px',\n              }}\n              className=\"nav-button\"\n            >\n              Login\n            </Link>\n          </div>\n        </section> \n      );\n    }\n  }\n\n  return (\n    <>\n      <nav>\n        {displayNav()}\n      </nav>\n    </>\n  );\n};\n\nexport default Nav;","//REACT\nimport React from 'react';\n\n\n//REDUX\n// import { useSelector, useDispatch } from 'react-redux';\n\n\n\n//ACTIONS\n\n//AUTH\nimport Auth from '../../utils/auth.js';\n\n//GRAPHQL APOLLO\n\n//COMPONENTS\nimport Nav from '../Nav';\n\n//this will be the page the new user sees when they login\n\n//message for the disabled buttons style\n// animation that flies in some crazy way to alert\n// user that the disabled presets will be enabled after login. \n// import './messageForButtons/styles/style.css';\n//some kind of \n\n//splash header will have p5 sketch of something cool not sure yet.\n// \n\nconst SplashHeader = () => {\n\n  return (\n    <>\n      {/* // for these conditional elements could use some kind of style animation that fades in and out some RGB shadow behind the button and around the button itself or the text highlighted after the previous animation the greyed out button presets */}\n      {\n        Auth.loggedIn()\n        ?\n        (\n          <>\n            <div \n              style={{\n                color: 'white',\n                textAlign: 'center'\n              }}\n            >\n              LED Art Matrix\n            </div>\n          </>\n        )\n        :\n        (\n          <>\n            <div \n              style={{\n                color: 'white',\n                textAlign: 'center'\n              }}\n            >\n              LED Art Matrix\n            </div>\n          </>\n        )\n      }\n      {/* // option to login signup */}\n      <Nav />\n    </>\n  );\n};\n// \n// show preview of the led controls with disabled buttons\n\nexport default SplashHeader;","export default __webpack_public_path__ + \"static/media/G6_-24_db_for_web_test.0318ec72.m4a\";","export default __webpack_public_path__ + \"static/media/128-Waterfalls.4c6e1113.m4a\";","export default __webpack_public_path__ + \"static/media/175-Reverb-study.f251267e.m4a\";","import React, {useState} from 'react';\n\n//AUDIO PLAYER\nimport AudioPlayer from 'react-h5-audio-player';\nimport 'react-h5-audio-player/lib/styles.css';\n\n//SONGS\nimport WATERFALLS from './music/128-Waterfalls.m4a';\nimport REVERBSTUDY from './music/175-Reverb-study.m4a';\nimport G6 from './music/G6_-24_db_for_web_test.m4a'\n\n//TEXT ANIMATIONS\nimport './trackAnimStyles.css';\n\n\nfunction AudioPlayerComponent() {\n  const [currentSong, setCurrentSong] = useState(G6)\n\n  //ARRAY OF LOCAL SONG FILE PATHS \n  const songs = [\n    {\n      trackName: 'g6',\n      filePath: G6\n    },\n    // {\n    //   trackName: 'ReverbStudy',\n    //   filePath: REVERBSTUDY\n    // },\n    // {\n    //   trackName: 'Waterfalls',\n    //   filePath: WATERFALLS\n    // },\n  ];\n\n  const trackListStyle = {\n    textDecoration: 'none',\n    color: 'white',\n    cursor: 'pointer',\n    listStyle: 'none',\n    display: 'inline',\n    marginBottom: '10px',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    padding: '10px 20px',\n    justifyContent: 'center',\n    transition: '1s',\n    borderRadius: '10px',\n  }\n\n  const trackListStylePlaying = {\n    textShadow: '3px 3px 3px black',\n    borderRadius: '10px',\n    backgroundColor: 'blue',\n    cursor: 'pointer',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    padding: '10px 20px',\n    listStyle: 'none',\n    display: 'inline',\n    marginBottom: '10px',\n    justifyContent: 'center',\n    transition: '1s',\n    border: '3px ridge blue'\n  }\n\n  function handleTrackChange(event) {\n    if (event.target.id !== currentSong) {\n      setCurrentSong(event.target.id)\n    } else {\n      return;\n    }\n  }\n\n  //volume slider state\n  const [volumeState, setVolumeState] = useState(0.005);\n  function handleVolumeChange(event, data) {\n    setVolumeState(event.target.value || data)\n  }\n\n  // .slider-style {\n  //   width: 70%;\n  //   margin: 0 auto;\n  // }\n  // const sliderStyle = {\n  //   width: '70%',\n  //   margin: '0 auto'\n  // };\n\n  // .slider-container {\n  //   display: flex;\n  //   flex-direction: column;\n  //   justify-content: center;\n  // }\n  const sliderContainerStyle = {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center'\n  };\n\n  const labelStyle = {\n    color: 'white'\n  }\n  \n  return (\n    <>\n      <AudioPlayer\n        autoPlay={true}\n        preload=\"auto\"\n        src={currentSong}\n        onPlay={e => console.log(\"onPlay\")}\n        volume={volumeState}\n        onVolumeChange={(event) => {\n          handleVolumeChange(event, event.target.volume);\n          setVolumeState(event.target.volume);\n        }}\n      />\n      <div style={sliderContainerStyle}>\n        <label\n          htmlFor=\"player-volume\"\n          style={labelStyle}\n        >\n          Music Player Volume: {volumeState}\n        </label>\n        {/* <input\n          name=\"player-volume\"\n          type=\"range\"\n          min=\"0\"\n          max=\"1000\"\n          value={volumeState}\n          onChange={handleVolumeChange}\n          style={sliderStyle}\n        ></input> */}\n      </div>\n      <section\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          textAlign: 'center',\n          marginTop: '10px'\n        }}\n      >\n        <div\n          style={{\n            borderTop: 'ridge 5px rgb(67, 26, 163)',\n            width: '80%',\n            borderRadius: '50%',\n            display: 'flex',\n            margin: '0 auto',\n          }}\n        ></div>\n        <span\n          style={{\n            borderRadius: '50%',\n            width: '80%',\n            display: 'flex',\n            justifyContent: 'center',\n            margin: '0 auto',\n            marginTop: '5px',\n            marginBottom: '5px',\n            color: 'white'\n          }}\n        >\n          Track List\n        </span>\n        {\n          songs.map((song) => (\n            <div\n              style={\n                currentSong === song.filePath \n                ? trackListStylePlaying \n                : trackListStyle\n              }\n              className={\n                currentSong === song.filePath\n                ? 'anim-playing-text'\n                : ''\n              }\n              id={song.filePath}\n              key={song.trackName}\n              onClick={handleTrackChange}\n            >\n              {song.trackName}\n            </div>\n          ))\n        }\n      </section>\n    </>\n  );\n};\n\nexport default AudioPlayerComponent;","/**\n * \n * @param {Number} _min \n * @param {Number} _max \n * @returns {Number} random number between the range given between min and max\n */\nexport function getRandomIntLimit(_min, _max) {\n  let min = Math.ceil(_min);\n  let max = Math.floor(_max);\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\n}\n\n/**\n * \n * @param {String} storeName a string to match against to choose which object store to select you want to place an action on\n * @param {String} method a string to match against to determine which action to perform on the selected storeName\n * @param {{properties?: *}} object for put and delete static actions: Some object we pass in to manipulate in or out of the object store\n */\nexport function idbPromise(storeName, method, object) {\n  return new Promise ((resolve, reject) => {\n    //open a connection to the database `led-matrix` with\n    // the version of 1\n    const request = window.indexedDB.open('led-matrix', 1);\n\n    //initialize the variables we want to use to reference\n    // different methods with different names i guess? once we get them\n    // from the original api and rename them...thats why I think we do this.\n    let db, transaction, store;\n    \n    // if version has changed or if this is the first time using\n    // the database, run this method and create your object stores for your\n    // project\n\n    //basically we set the value of the request property method which was the request\n    // to open an indexedDB place of memory with the name and version\n    request.onupgradeneeded = function(event) {\n      const db = request.result;\n      //create the object store for each type of data and set \n      //\"primary\" key index to be the `_id` of the data\n      db.createObjectStore('defaultPreset', { keyPath: '_id'});\n      db.createObjectStore('gifs', { keyPath: '_id' });\n    };\n    //if any errors happened while connecting to idb\n    request.onerror = (event) => {\n      console.log(event);\n      console.log('error creating object store for idb...');\n    }\n\n\n\n    //on database creation success\n    /// set the value of the .onsuccess() method to\n    // the value of a function that executes some other code\n    request.onsuccess = (event) => {\n      //start saving references to the database to the `db` variable\n      db = request.result;\n\n      //open a transaction to whatever we pass into `storeName`\n      // must match one of the object store names in this promise\n      transaction = db.transaction(storeName, 'readwrite');\n\n      //save a reference to that object store that we passed as \n      // the storename string\n      store = transaction.objectStore(storeName);\n\n      //if error\n      db.onerror = (error) => {\n        console.log('there was an error on success instance method upon execution', error);\n      };\n\n      //now we try to resolve the promise object to be returned\n      // by this function and the action/method string\n      // that we want to match against...hmm looks like redux a bit\n\n      switch(method) {\n        case 'put': \n          store.put(object);\n          resolve(object);\n        break;\n        case 'get':\n          const all = store.getAll();\n          all.onsuccess = () => {\n            return resolve(all.result);\n          };\n        break;\n        case 'delete':\n          //console.log('object passed into delete action');\n          //console.log(object);\n          store.delete(object._id);\n        break;\n        default: \n          all.onerror = () => {\n            console.log('Not a valid method passed into the function executing this code...')\n          };\n        break;\n      }\n      //when transaction withe the indexedDB is complete\n      // close the connection\n      transaction.oncomplete = function() {\n        db.close();\n      };\n    };\n  });\n}","//IMPORTS FOR CREATING A QUERY\nimport gql from 'graphql-tag';\n\n//USER GRAPHQL QUERY TO GET USERINFO FROM DATABASE\nexport const USER_QUERY = gql`\n{\n  user\n  {\n    _id\n    username\n    email\n    orders{\n      _id\n    }\n    presets {\n      _id\n      presetName\n    }\n    defaultPreset\n    userSearchTerm\n  }\n}\n`;\n\nexport const GET_PRESETS = gql`\n\n  {\n    getPresets{\n      _id\n      presetName\n    }\n  }\n`;\n\nexport const GET_SEARCH_TERMS = gql`\n  {\n    getSearchTerms{\n      _id\n      termText\n      termCategory\n      limit\n    }\n  }\n`;\n\n//this will be modified by the server's resolver function to node fetch the giphy api\nexport const GET_GIFS_CREATE_AND_OR_UPDATE = gql`\n  {\n    getGifsCreateAndOrUpdate{\n      _id\n      gifSrc\n      gifCategory\n      limit\n    }\n  }\n`;","import gql from 'graphql-tag';\n\nexport const LOGIN = gql`\n  mutation login\n  (\n    $email: String!,\n    $password: String!\n  )\n  {\n    login\n    (\n      email: $email,\n      password: $password\n    )\n    {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser\n  (\n    $username: String!,\n    $email: String!,\n    $password: String!\n  )\n  {\n    addUser\n    (\n      username: $username,\n      email: $email,\n      password: $password\n    )\n    {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_USER_PRESET = gql`\n  mutation addUserPreset\n  (\n    $presetName: String!\n  )\n  {\n    addUserPreset\n    ( \n      presetName: $presetName\n    )\n    {\n      _id\n      username\n      email\n      presets {\n        _id\n        presetName\n      }\n      defaultPreset\n    }\n  }\n`;\n\nexport const UPDATE_USER_DEFAULT_PRESET = gql`\n  mutation updateUserDefaultPreset\n  (\n    $_id: ID!,\n  )\n  {\n    updateUserDefaultPreset\n    (\n      _id: $_id,\n    )\n    {\n      _id\n      username\n      email\n      defaultPreset,\n      presets {\n        _id\n        presetName\n      }\n    }\n  }\n`;\n\nexport const UPDATE_USER_SEARCH_TERM = gql`\n  mutation updateUserSearchTerm\n  (\n    $userSearchTerm: ID!\n  ){\n    updateUserSearchTerm\n    (\n      userSearchTerm: $userSearchTerm\n    ){\n      username\n      _id\n      searchTerm{\n        termText\n        limit\n        termCategory\n      }\n    }\n  }\n`;","export const verifyOn = (data) => {\n  //some condition preventing to be on...\n  //false by default\n  //ACTIVATE ON THE RETURN OF API QUERY DATA\n  \n  return {\n    type: 'VERIFY_IS_ON',\n    payload: data\n  };\n};\n\nexport const getGifs = (data) => {\n  return {\n    type: 'GET_GIFS',\n    payload: data\n  };\n};\n\nexport const scrollGifInterval = (data) => {\n  return {\n    type: 'SCROLL_GIF_INTERVAL',\n    payload: data\n  };\n};\n\nexport const searchTermChange = (data) => {\n  return {\n    type: 'SEARCH_TERM_CHANGE',\n    payload: data\n  }\n}\nexport const searchValidate = (data) => {\n  return {\n    type: 'SEARCH_VALIDATE',\n    payload: data\n  };\n};","//REACT IMPORTS\nimport React, {useEffect, useState} from 'react';\n\n//REACT SPRING\nimport {useSpring, animated, config} from 'react-spring';\n\n//STYLES\nimport './scrolling-styles/artScrollerLayoutStyle.css';\n\n//AUTH\n// import Auth from '../../utils/auth.js';\n\n//HELPERS\nimport {\n  getRandomIntLimit,\n  idbPromise\n} from '../../utils/helpers.js';\n\n//APOLLO GRAPHQL\nimport {useQuery} from '@apollo/react-hooks';\n//QUERIES\nimport {\n  //GET_SEARCH_TERMS,\n  //USER_QUERY,\n  GET_GIFS_CREATE_AND_OR_UPDATE\n} from '../../utils/queries.js';\n\n//MUTATIONS\nimport {\n  //UPDATE_USER_SEARCH_TERM\n} from '../../utils/mutations.js';\n\n//REDUX\nimport { useSelector, useDispatch } from 'react-redux';\n//ACTIONS\nimport {\n  //verifyOn,\n  getGifs,\n  //scrollGifInterval,\n  //searchTermChange,\n  //searchValidate\n} from '../../actions/art-scroller-actions';\n\n\nconst ArtScroller = () => {\n\n  //init button spring\n  const leftInitButtonSpring = useSpring({\n    config: config.wobbly,\n    delay: 100,\n    from: {\n      opacity: 0,\n      marginRight: '1000px' \n    },\n    to: {\n      opacity: 1,\n      marginRight: '5px'\n    }\n  });\n\n  //scroller on/off button spring\n  const scrollerOnOffButtonSpring = useSpring({\n    config: config.wobbly,\n    delay: 100,\n    from :{\n      opacity: 0\n    },\n    to: {\n      opacity: 1\n    }\n  });\n\n  //REDUX DISPATCH\n  const dispatchREDUX = useDispatch();\n  //console.log(dispatchREDUX);\n  //GRAPHQL DATABASE QUERY FOR CATEGORY SELECTIONS\n  //GET USER INFO\n  //const userQueryResponse = useQuery(USER_QUERY);\n  //GET SEARCH TERM INFO\n  //const searchTermQueryResponse = useQuery(GET_SEARCH_TERMS);\n  //GET GIFS \n  const getGifsQueryResponse = useQuery(GET_GIFS_CREATE_AND_OR_UPDATE);\n  // console.log(getGifsQueryResponse.data);\n\n  //lazy event triggered server get gifs query\n  //const [lazyGetGifs, {loading, data}] = useLazyQuery(GET_GIFS_CREATE_AND_OR_UPDATE);\n  \n  //update the state of the searchTerms out of artScrollerState\n  useEffect(() => {\n    if (getGifsQueryResponse.data)\n    {\n      console.log(getGifsQueryResponse);\n      dispatchREDUX(\n        getGifs(\n          getGifsQueryResponse.data.getGifsCreateAndOrUpdate\n        )\n      );\n\n      //check the idb store for gifs if exists and delete it and put the new one in\n      async function updateIDBGifs() {\n        Promise.resolve(idbPromise('gifs', 'get'))\n        .then(\n          async (res) => {\n            console.log('got the idb gifs');\n            console.log(res);\n\n            console.log('updating if only it does not exist yet on the browser idb store...');\n            if (res[0] === undefined) {\n              getGifsQueryResponse.data.getGifsCreateAndOrUpdate.forEach(gif => {\n                console.log('updating idb gifs...');\n                return idbPromise('gifs', 'put', gif);\n              });\n            } else {\n              console.log('exists already deleting current store and making new one');\n              //find current store and delete based on the object._id's \n              // that were passed into the delete function for each gif of the idb array\n              Promise.resolve(idbPromise('gifs', 'get'))\n              .then(\n                async (res) => {\n                  console.log('deleting current idb gifs...');\n                  console.log(res);\n                  res.forEach(gif => { \n                    return idbPromise('gifs', 'delete', gif)\n                  })\n                }\n              )\n              .catch(err => console.log(err));\n              \n              //update current gifs\n              getGifsQueryResponse.data.getGifsCreateAndOrUpdate.forEach(gif => {\n                console.log('updating current gifs...');\n                return idbPromise('gifs', 'put', gif);\n              });\n            }\n          }\n        )\n        .catch(error => console.error(error));\n      }\n      console.log(Promise.resolve(updateIDBGifs()).then(res => console.log(res)));\n    } \n    else if (!getGifsQueryResponse.data) \n    {\n      //fetch to database failed for api call fetch from idb\n      //and dispatch the gifs to the action to change the gifs array state\n      Promise.resolve(idbPromise('gifs', 'get'))\n      .then(\n        async (res) => {\n          //got gifs from idb that should exist if already were online to fetch some gifs.\n          console.log(res);\n          try {\n            dispatchREDUX(\n              getGifs(\n                [...res]\n              )\n            );\n          } catch (error) {\n            console.log(error);\n          }\n        }\n      )\n      .catch(err => console.log(err));\n    }\n  }, [getGifsQueryResponse, dispatchREDUX, getGifsQueryResponse.data]);\n\n\n  //OBSERVE GLOBAL STATE\n  const artScrollerState = useSelector(state => state.artScroller);\n  //console.log(artScrollerState);\n\n  //GLOBAL PIECE OF STATE\n  const {\n    //isOnState,\n    gifs,\n    //scrollInterval,\n    //searchTerms,\n    //searchIsValid\n  } = artScrollerState;\n  //console.log(\"search terms state\");\n  //console.log(searchTerms);\n\n  async function handleRefetch(event) {\n    event.persist();\n    console.log(event.key);\n    if (figureIsOnState === false) {\n      setFigureIsOnState(true);\n    }\n    try {\n      if (event.key === 'w') {\n        getGifsQueryResponse.refetch();\n      } else {\n        console.log(event.target.parentElement);\n        getGifsQueryResponse.refetch();\n      }\n    } catch (error) {\n      console.log(error);\n    } finally {//this wont execute for some reason...\n      if (navigator in window && window.navigator.onLine === false) {\n        console.log('navigator');\n        console.log('refetch failed pulling from idb');\n        Promise.resolve(idbPromise('gifs', 'get'))\n        .then(\n          (res) => {\n            console.log('trying to get from idb since refetch failed');\n    \n            dispatchREDUX(\n              getGifs(\n                [...res]\n              )\n            );\n          }\n        )\n        .catch(err => console.log(err));\n      }\n    }\n  }\n\n  //create animation that scrolls opacity at different animation durations\n  // for opacity only\n  const [animationDurationState, setAnimationDurationState] = useState('30');\n  function handleAnimationDurationChange(event) {\n    setAnimationDurationState(event.target.value);\n  }\n\n  //position style state\n  //input sliders for positioning the circle\n  //maybe later can click and drag. and throw around\n  const [verticalPositionState, setVerticalPositionState] = useState('50');\n  function handleVerticalPositionStateChange(event) {\n    setVerticalPositionState(event.target.value);\n  }\n\n  //horizontal position style state\n  const [horizontalPositionState, setHorizontalPositionState] = useState('33.4');\n  function handleHorizontalPositionStateChange(event) {\n    setHorizontalPositionState(event.target.value);\n  }\n\n    // @media screen and (max-width: 1024px) {\n  //   .scroller-media {\n  //     top: 37vh;\n  //     left: 33.4vw;\n  //     height: 50vh;\n  //     width: 30vw;\n  //   }\n  // }\n\n  //width of circle state maybe\n  // input slider for widening the scroller\n  const [scrollerCircleWidth, setScrollerCircleWidth] = useState('30')\n  function handleScrollerCircleWidthChange(event) {\n    setScrollerCircleWidth(event.target.value)\n  }\n  //animation delays\n\n  //handle all gifs opacity local state\n  //const [opacityState, setOpacityState] = useState(0);\n  // function handleOpacityChange(event) {\n  //   setOpacityState(event.target.value)\n  // }\n\n  const [invertState, setInvertState] = useState(0);\n  function handleInvertChange(event) {\n    setInvertState(event.target.value)\n  }\n\n  const [figureIsOnState, setFigureIsOnState] = useState(false);\n  function handleFigureChange(event) {\n    setFigureIsOnState(!figureIsOnState);\n  }\n\n  // .img-scroll {\n  //   animation-name: scrollAnim;\n  //   animation-duration: .5s;\n  //   animation-delay: .1s; //lowest to highest duration for each gif\n  //   animation-timing-function: ease-in;\n  //   animation-direction: alternate;\n  //   animation-iteration-count: infinite;\n  // }\n\n\n  return (\n    <>\n      <main\n        style={{\n          display: 'flex',\n          flexDirection: 'column'\n        }}\n      >\n        {/* <div\n          style={{\n            color: 'white',\n            marginTop: '10px'\n          }}\n        >\n          Art Scroller\n        </div> */}\n        <section>\n          {/* <form>\n            <select\n              name=\"category\"\n            >\n              {\n                searchTerms.map(searchTerm => (\n                <option \n                  name=\"category\"\n                  key={searchTerm._id}\n                > \n                  {searchTerm.termText}\n                </option>\n                ))\n              }\n            </select>\n          </form> */}\n          <div className=\"border-top-artScroller\"></div>\n          <span\n            style={{\n              color: 'white',\n              textAlign: 'center'\n            }}\n          >\n            Art Scroller Controls\n          </span>\n          <div\n            className=\"preset-button-container\"\n          >\n\n            <animated.button\n              style={leftInitButtonSpring}\n              className=\"scroller-fetch-button\"\n              onClick={handleRefetch}\n              onKeyPress={handleRefetch}\n            >\n              Start Art Scroller!\n            </animated.button>\n            <animated.button\n              style={scrollerOnOffButtonSpring}\n              className={figureIsOnState ? 'scroller-toggle-button-on' : 'scroller-toggle-button-off'}\n              onClick={handleFigureChange}\n            >\n              {\n                figureIsOnState\n                ?\n                <span style={{color: 'white'}}>Turn Off Scroller</span>\n                :\n                <span style={{color: 'white'}}>Turn On Scroller</span>\n              }\n            </animated.button>\n          </div>\n          {/* <label \n            htmlFor=\"opacity\"\n            style={{color: 'white'}}\n          >\n            opacity: {opacityState/100}\n          </label>\n          <input \n            name=\"opacity\"\n            type=\"range\"\n            min=\"0\"\n            max=\"30\"\n            value={opacityState}\n            onChange={handleOpacityChange}\n          /> */}\n          <div\n            className=\"slider-container\"\n          >\n            <label\n              htmlFor=\"scroller-circle-width\"\n              style={{color: 'white'}}\n            >\n\n              Scroller Circle Width: {scrollerCircleWidth}\n            </label>\n            <input \n              name=\"scroller-circle-width\"\n              className=\"slider-style\"\n              type=\"range\"\n              min=\"0\"\n              max=\"100\"\n              value={scrollerCircleWidth}\n              onChange={handleScrollerCircleWidthChange}\n            />\n            <label\n              htmlFor=\"vertical-positioning\"\n              style={{color: 'white'}}\n            >\n\n              Scroller Vert Positioning: {verticalPositionState}\n            </label>\n            <input \n              name=\"vertical-positioning\"\n              className=\"slider-style\"\n              type=\"range\"\n              min=\"0\"\n              max=\"200\"\n              value={verticalPositionState}\n              onChange={handleVerticalPositionStateChange}\n            />\n            <label\n              htmlFor=\"horizontal-positioning\"\n              style={{color: 'white'}}\n            >\n\n              Scroller Horizontal Positioning: {horizontalPositionState / 1000}\n            </label>\n            <input \n              name=\"horizontal-positioning\"\n              className=\"slider-style\"\n              type=\"range\"\n              min=\"0\"\n              max=\"100\"\n              value={horizontalPositionState}\n              onChange={handleHorizontalPositionStateChange}\n            />\n            <label\n              htmlFor=\"invert\"\n              style={{color: 'white'}}\n            >\n              Invert Colors: {invertState/100}\n            </label>\n            <input\n              className=\"slider-style\"\n              name=\"invert\"\n              type=\"range\"\n              min=\"0\"\n              max=\"100\"\n              value={invertState}\n              onChange={handleInvertChange}\n            />\n            <label\n              htmlFor=\"animation-duration\"\n              style={{color: 'white'}}\n            >\n              Scroll Speed: {animationDurationState/100}\n            </label>\n            <input\n              className=\"slider-style\"\n              name=\"animation-duration\"\n              type=\"range\"\n              min=\"1\"\n              max=\"100\"\n              value={animationDurationState}\n              onChange={handleAnimationDurationChange}\n            />\n          </div>\n          <figure\n            style={{\n              display: `${figureIsOnState ? 'block' : 'none'}`,\n              margin: '0'\n            }}\n            className=\"figure-transition-style\"\n          >\n            {\n              gifs \n              &&\n              gifs.map((gif, index) => (\n                <img \n                  key={gif._id}\n                  alt={`gif-${index}`}\n                  src={gif.gifSrc}\n                  style={{\n                    position: 'absolute',\n                    zIndex: '1',\n                    //opacity: `${opacityState/100}`,\n                    filter: `invert(${invertState/100})`,\n                    borderRadius: `50%`,\n                    animationName: 'scrollAnim',\n                    animationDuration: `${animationDurationState/100 * (index + getRandomIntLimit(index, 20))}s`,\n                    animationDelay: `0.${index + 1}`,\n                    animationTimingFunction: 'ease-in',\n                    animationDirection: 'reverse',\n                    animationIterationCount: 'infinite',\n                    top: `${verticalPositionState}vh`,\n                    width: `${scrollerCircleWidth}vw`,\n                    left: `${horizontalPositionState}vw`\n                  }}\n                  className=\"scroller-media\"\n                />\n              ))\n            }\n          </figure>\n        </section>\n      </main>\n    </>\n  );\n};\n\nexport default ArtScroller;","//LED CHANGE ACTIONS\nexport const loadUserSplashConfig = (preset) => {\n  return {\n    type: 'LOAD_USER_SPLASH_CONFIG',\n    payload: {\n      presetName: preset.presetName,\n      animationDelayState: preset.animationDelayState,\n      animationDurationState: preset.animationDurationState\n    }\n  };\n};\nexport const invertSwitch = (data) => {\n  return {\n    type: 'INVERT_SWITCH',\n    payload: data\n  }\n}\nexport const presetSwitch = (data) => {\n  return {\n    type: 'PRESET_SWITCH',\n    payload: data\n  };\n};\nexport const animationDurationChange = (data) => {\n  return {\n    type: 'ANIMATION_DURATION_CHANGE',\n    payload: data\n  }\n}\nexport const animationDelayChange = (data) => {\n  return {\n    type: 'ANIMATION_DELAY_CHANGE',\n    payload: data\n  }\n}\nexport const alphaFaderChange = (data) => {\n  return {\n    type: 'ALPHA_FADER_CHANGE',\n    payload: data\n  };\n};\n//save class property values that are changed by faders?\n//animation duration\nexport const savePresetName = (data) => {\n  return {\n    type: 'SAVE_PRESET_NAME',\n    payload: data\n  };\n};\n//on mouse up?? transition from position in \n// animation to beginning of current animation or \nexport const isAnimating = (data) => {\n  return {\n    type: 'IS_ANIMATING',\n    payload: data\n  };\n};\n//on click (mouse down and up)???\nexport const stopAnimating = (data) => {\n  return {\n    type: 'STOP_ANIMATING',\n    payload: data\n  };\n};","//IMPORT REACT\nimport React, { useEffect } from 'react';\n\n//REACT SPRING\nimport {useSpring, animated} from 'react-spring';\n\n//STYLES\nimport './rainbowV2/styles/style.scss';\nimport './rainbowStart/styles/style.scss';\nimport './waves/styles/style.scss';\nimport './spiral/styles/style.scss';\nimport './fourSpirals/styles/style.scss';\nimport './ledLayoutStyle.css'\n\n//COMPONENTS\nimport ArtScroller from '../ArtScroller';\n\n//maybe disable some \"paid presets?\"\n\n//future thought to translate the presets into DMX controls.\n\n//or control the LEDs on the web app with MIDI or DMX\n\n//APOLLO GRAPHQL QUERIES AND MUTATIONS\nimport {useQuery, useMutation} from '@apollo/react-hooks';\nimport {USER_QUERY, GET_PRESETS} from '../../utils/queries.js';\nimport {UPDATE_USER_DEFAULT_PRESET} from '../../utils/mutations.js';\n\n//AUTH\nimport Auth from '../../utils/auth.js';\n\n//REDUX\nimport {useSelector, useDispatch} from 'react-redux';\n\n//ACTIONS\nimport { \n  //loadUserSplashConfig,\n  presetSwitch,\n  //animationDelayChange,\n  //animationDurationChange,\n  //alphaFaderChange,\n  // eslint-disable-next-line\n  //invertSwitch,//feature after signing up\n  //savePresetName\n} from '../../actions/led-actions';\n\nconst BigLedBox = () => {\n  //springs\n  const rainbowButtonSpring = useSpring({\n    delay: 1000,\n    from: {\n      opacity: 0,\n    },\n    to: {\n      opacity: 1,\n    }\n  });\n\n  const V2ButtonSpring = useSpring({\n    delay: 1300,\n    from: {\n      opacity: 0\n    },\n    to: {\n      opacity: 1\n    }\n  });\n\n  const wavesButtonSpring = useSpring({\n    delay: 1500,\n    from: {\n      opacity: 0\n    },\n    to: {\n      opacity: 1\n    }\n  });\n\n  const spiralButtonSpring = useSpring({\n    delay: 1700,\n    from: {\n      opacity: 0\n    },\n    to: {\n      opacity: 1\n    }\n  });\n\n  const fourSpiralsButtonSpring = useSpring({\n    delay: 2000,\n    from: {\n      opacity: 0\n    },\n    to: {\n      opacity: 1\n    }\n  });\n\n  const saveButtonSpring = useSpring({\n    delay: 2300,\n    from: {\n      opacity: 0\n    },\n    to: {\n      opacity: 1\n    }\n  });\n\n\n  //REDUX DISPATCH\n  const dispatchREDUX = useDispatch();\n  //functions to create the columns and rows to render\n\n  //query get all presets in the database\n  // const {presetData} = useQuery(GET_PRESETS);\n\n  \n  //execute function on first page load\n  // get user default starting preset class name string\n  const userQueryResponse = useQuery(USER_QUERY);\n  // console.log('user query response');\n  // console.log(userQueryResponse);\n\n  const presetQueryResponse = useQuery(GET_PRESETS);\n  // console.log('preset query response');\n  // console.log(presetQueryResponse);\n\n  //function that sets the starting preset name of the user logging on\n  // conditionally render whether they are logged on => load with that default preset\n  // : else load the blank preset name\n  useEffect(() => {\n    if (presetQueryResponse.data && userQueryResponse.data) \n    {\n      //console.log('data arrived');\n      //extract the data to compare whether the \n      //user default preset matches one in the \n      // preset list queried\n      for (\n        let i = 0; \n        i < presetQueryResponse.data.getPresets.length; \n        i++\n      ) \n      {\n        if (\n          presetQueryResponse.data.getPresets[i]._id\n          === userQueryResponse.data.user.defaultPreset\n        ) \n        {//id matches\n          // console.log(\"ID of the preset of the user\");\n          // console.log(userQueryResponse.data.user.defaultPreset);\n          // console.log(presetQueryResponse.data.getPresets[i]);\n          \n          //dispatch action to switch to the default presetName\n          // that matches the id given \n          dispatchREDUX(\n            presetSwitch(\n              presetQueryResponse.data.getPresets[i].presetName\n            )\n          );\n        }\n      }\n    }\n  }, [presetQueryResponse, userQueryResponse, dispatchREDUX]);\n  \n  //REDUX GLOBAL STATE\n  const ledChangeState = useSelector(state => state.ledChange);\n  //console.log(ledChangeState);\n\n  //REDUX piece of global state\n  const {\n    // alpha,\n    presetName,\n    // animationDurationState,\n    // _animationDelayState,\n\n  } = ledChangeState;\n  \n\n\n  // const [animationDelayState, setAnimationDelayState] = useState(0);\n  // function animationDelaySliderChange(event) {\n  //   setAnimationDelayState(event.target.value);\n  //   // console.log(((event.target.value) / 100).toString());\n  //   dispatchREDUX(animationDelayChange((event.target.value / 100).toString()));\n  // } \n\n  // const [animationSpeedState, setAnimationSpeedState] = useState(0);\n  \n  // function animationSpeedSliderChange(event) {\n  //   setAnimationSpeedState(event.target.value);\n  //   dispatchREDUX(animationDurationChange((event.target.value / 100).toString()));\n  // }\n\n  /**\n   * array of led objects that only contain the information needed\n   * use .map() in react to create elements with unique keys\n   * react needs key properties on JSX in order to clean up during\n   * mounting and unmounting elements\n   */\n  //eslint-disable-next-line\n  let leds_info;\n  const leds = [];\n  function createLedObjectsArray() {\n    for (let i = 1; i < 33; i++) {\n      leds.push(\n        // <>\n        //   <div\n        //    className={`led${i}-${num}`}\n        //    key={`led${i}-${num}`}\n        //   ></div>\n        // </>\n        {\n          ledNumber: i,\n        }\n      );\n    }\n    // console.log(leds);\n    return leds;\n  }\n  // const createLeds = (num) => {\n  //   elementText = '';\n  //   for (let i = 1; i < 33; i++) {\n  //     elementText += `\n  //       <div class=\"led${i}-${num}\"></div>\n  //     `;\n  //   };\n  //   return elementText;\n  // }\n\n  // {\n  //   leds.map((led, index) => (\n  //     <div className={`led${i}-${index + 1}`} key={`led${i}-${index + num}`}></div>\n  //   ))\n  // }\n\n  /**\n   * array of row objects only containing information for\n   * react to use .map() and make unique keys for the\n   * JSX elements and contain a horizontal rows of leds\n   * in each row the nested .map() is inserting all 32 leds\n   * into a single rows.map() iteration.\n   * \n   * 32 rows, 32 leds per row\n   * \n   * 32x32 2D grid\n   */\n  // eslint-disable-next-line\n  let rows_info;\n  const rows = [];\n  function createLedRowsArray(num) {\n    for (let i = 1; i < num; i++) {\n      rows.push(\n        {\n          rowNumber: i\n        }\n      );\n    }\n    // console.log(rows);\n    return rows;\n  }\n  // const createRows = (num) => {\n  //   let elementText = '';\n  //   for ( let i = 1; i < num; i++ ){\n  //     elementText += `\n  //     <div class=\"row${i}\">\n  //       ${createLeds(i)}\n  //     </div>\n  //     `\n  //   }\n  //   return elementText;\n  // };\n\n  const [updateUserDefaultPreset] = useMutation(UPDATE_USER_DEFAULT_PRESET);\n  async function handleSaveDefault(event) {\n    event.preventDefault();\n    event.persist();\n    // get the classname string split from the classname\n    //console.log(event.target.parentElement.parentElement.parentElement.children[1].firstChild.firstChild.className.split('led1-1')[1]);\n    let presetString = \n      event\n      .target\n        .parentElement\n          .parentElement\n            .parentElement\n              .children[1]\n                .firstChild\n                  .firstChild\n                  .className\n                  .split('led1-1')[1];\n    //check the presetdata from the query to get the preset ID to save to the user\n    // that matches the preset name acquired from the event\n    for (\n      let i = 0; \n      i < presetQueryResponse.data.getPresets.length; \n      i++\n    ){\n      if (\n        presetString === \n        presetQueryResponse.data.getPresets[i].presetName  \n      ){\n        //console.log('found the preset');\n        console.log(presetQueryResponse.data.getPresets[i].presetName);\n        //use mutation\n        try {\n          await updateUserDefaultPreset\n          (\n            {\n              variables: {\n                _id: presetQueryResponse.data.getPresets[i]._id\n              }\n            }\n          );\n        } catch (error) {\n          console.error(error);\n        }\n        console.log('preset saved');\n      } else {\n        console.log('updating...');\n      }\n    }\n  }\n\n  createLedObjectsArray(33);\n  createLedRowsArray(33);\n\n\n  //preset style variables here\n\n  \n  return (\n    <>\n      <main className=\"box-style\">\n        {/* <div className=\"slidecontainer\">\n          <input \n            type=\"range\" \n            min=\"0\" \n            max=\"100\" \n            value={animationDelayState} \n            className=\"slider\" \n            id=\"myRange\"\n            onChange={animationDelaySliderChange}\n          />\n          <p style={{color: 'white'}}>animation delay: {animationDelayState}</p> */}\n          {/* <input \n            type=\"range\" \n            min=\"0\" \n            max=\"100\" \n            value={animationSpeedState} \n            className=\"slider\" \n            id=\"myRange\"\n            onChange={animationSpeedSliderChange}\n          />\n          <p style={{color: 'white'}}>animation speed: {animationSpeedState}</p>\n        </div> */}\n        <section \n          style={{\n            position: 'relative',\n            display: 'flex',\n            textAlign: 'center',\n            flexDirection: 'column'\n          }}\n        >\n          <ArtScroller />\n          <div className=\"border-top-led\"></div>\n          <span \n            style={{\n              color: 'white',\n              textAlign: 'center'\n            }}\n          >\n            LED Matrix Presets\n          </span>\n          {\n            !Auth.loggedIn()\n            &&\n            (\n              <>\n                <span\n                  style={{\n                    color: 'white'\n                  }}\n                >\n                  To see the Disabled Presets, Log in or Sign up! Also save your own Default Preset!\n                </span>\n              </>\n            )\n          }\n          <div\n            className=\"preset-button-container\"\n            // style={{\n            //   display: 'flex',\n            // }}\n          >\n            <animated.button\n              style={rainbowButtonSpring}\n              className=\"preset-button rainbow-anim\"\n              onClick={() => {\n                dispatchREDUX(presetSwitch(''))\n              }}\n            >\n              <span\n                className=\"preset-button-text\"\n              >\n                rainbowTest\n              </span>\n            </animated.button>\n            <animated.button\n              style={V2ButtonSpring}\n              className=\"preset-button\"\n              onClick={() => {\n                dispatchREDUX(presetSwitch('V2'))\n              }}\n            >\n              <span\n                className=\"preset-button-text\"\n                style={{width: '100%'}}\n              >\n                V2\n              </span>\n            </animated.button>\n            <animated.button\n              style={wavesButtonSpring}\n              className={Auth.loggedIn() ? `preset-button` : 'preset-button-disabled'}\n              disabled={Auth.loggedIn() ? false : true}//enable if logged in\n              onClick={() => {\n                dispatchREDUX(presetSwitch('waves'))\n              }}\n            >\n              <span\n                className=\"preset-button-text\"\n              >\n                waves\n              </span>\n            </animated.button>\n            <animated.button\n              style={spiralButtonSpring}\n              className={Auth.loggedIn() ? 'preset-button' : 'preset-button-disabled'}\n              disabled={Auth.loggedIn() ? false : true }//enable if logged in\n              onClick={() => {\n                dispatchREDUX(presetSwitch('spiral'))\n              }}\n            >\n              <span\n                className=\"preset-button-text\"\n              >\n                spiral\n              </span>\n            </animated.button>\n            <animated.button\n              style={fourSpiralsButtonSpring}\n              className={Auth.loggedIn() ? 'preset-button' : 'preset-button-disabled'}\n              disabled={Auth.loggedIn() ? false : true}//enable if logged in\n              onClick={() => {\n                dispatchREDUX(presetSwitch('fourSpirals'))\n              }}\n            >\n              <span\n                className=\"preset-button-text\"\n              >\n                fourSpirals\n              </span>\n            </animated.button>\n\n            {/* save as new login preset */}\n            <animated.button\n              style={saveButtonSpring}\n              className={Auth.loggedIn() ? 'preset-button save-button' : 'preset-button-disabled'}\n              disabled={Auth.loggedIn() ? false : true}//enable if logged in\n              onClick={handleSaveDefault}\n            >\n              Save as Default\n            </animated.button>\n          </div>\n        </section>\n        <section\n          className=\"led-matrix-container\"\n        >\n          {\n            rows.map((row, index) => (\n              <div \n                key={`row${index + 1}`} \n                className={`row${index + 1}`}\n              >\n                {\n                  leds.map((led, index) => (\n                    <div \n                      key={`led${led.ledNumber}-${index + 1}`} \n                      className={`led${index + 1}-${row.rowNumber}${Auth.loggedIn() ? presetName : presetName}`}\n                      style={{\n                        // animationDuration: `${(index / 64) + ( index / row.rowNumber * (.05 * index))}`,\n                        // animationDelay: `${(index / 16) + index / (row.rowNumber / index - (4 * row.rowNumber))}`\n                      }}\n                    >\n                    </div>\n                  ))\n                }\n              </div>\n            ))\n          }\n        </section>\n      </main>\n    </>\n  );\n};\n\nexport default BigLedBox;","import React from 'react';\n\n//components\nimport AudioPlayerComponent from '../components/AudioPlayer';\nimport BigLedBox from '../components/BigLedBox';\n\n//audio player and big led box\nconst Home = () => {\n  return (\n    <>\n      <AudioPlayerComponent />\n      <BigLedBox />\n    </>\n  );\n};\n\nexport default Home;","//REACT IMPORTS\nimport React from 'react';\n\n//AUTH\nimport Auth from '../utils/auth';\n\n//GRAPHQL IMPORTS\nimport { useMutation } from '@apollo/react-hooks';\nimport { LOGIN } from '../utils/mutations';\n\n//REDUX IMPORTS\nimport { useSelector, useDispatch } from 'react-redux';\n\n//import actions for login formstate reducer\nimport {\n  loginEmailChange,\n  loginEmailCompleted,\n  loginPasswordChange,\n  loginPasswordCompleted\n} from '../actions/login-form-actions';\n\n\nconst Login = () => {\n  //OBSERVE GLOBAL LOGIN FORM STATE\n  const loginFormState = useSelector(state => state.loginForm)\n  //console.log(loginFormState);\n  //GRAB PIECE OF STATE\n  const {\n    email,\n    emailIsComplete,\n    password,\n    passwordIsComplete\n  } = loginFormState;\n\n  //REDUX DISPATCH\n  const dispatchREDUX = useDispatch();\n\n  //GRAPHQL LOGIN MUTATION\n  const [login, { error }] = useMutation(LOGIN);\n\n  function handleChange(event) {\n    if (event.target.type === 'email') {\n      dispatchREDUX(loginEmailChange(event.target.value));\n      dispatchREDUX(loginEmailCompleted(event.target.value));\n    }\n    if (event.target.type === 'password') {\n      dispatchREDUX(loginPasswordChange(event.target.value));\n      dispatchREDUX(loginPasswordCompleted(event.target.value));\n    }\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login\n      (\n        {\n          variables: {\n            email: email,\n            password: password\n          }\n        }\n      );\n      const token = mutationResponse.data.login.token;\n      //authorize token and send user to home page\n      Auth.login(token);\n    } catch(err) {\n      console.log(err);\n    }\n  }\n\n  return (\n    <>\n      <div\n        className=\"form-container\"\n      >\n        <form \n          onSubmit={handleSubmit}\n          className=\"form-card\"\n        >\n          <label\n            htmlFor=\"email\"\n            className=\"form-email-label\"\n          >\n            Email: \n          </label>\n          <input\n            type=\"email\"\n            name=\"email\"\n            id=\"email-login\"\n            onChange={handleChange}\n            placeholder=\"Your Email\"\n            className=\"form-email-input\"\n            autoComplete=\"off\"\n          />\n          <label\n            htmlFor=\"password\"\n            className=\"form-password-label\"\n          >\n            Password:\n          </label>\n          <input \n            type=\"password\"\n            name=\"password\"\n            id=\"password-login\"\n            onChange={handleChange}\n            placeholder=\"Your Password\"\n            className=\"form-password-input\"\n            autoComplete=\"off\"\n          />\n          {//login error rendering\n            error\n            ?\n            (\n              <div\n                style={{color: 'red'}}\n              >\n                The provided credentials were incorrect\n              </div>\n            )\n            : null\n          }\n          <div\n            className=\"form-button-container\"\n          >\n            <button\n              type=\"submit\"\n              disabled={false}\n              className='form-btn'\n            >\n              Login\n            </button>\n          </div>\n        </form>\n     </div>\n  </>\n  );\n};\n\nexport default Login;","export const loginEmailChange = (data) => {\n  return {\n    type: 'LOGIN_EMAIL_CHANGE',\n    payload: data\n  }\n}\nexport const loginEmailCompleted = (data) => {\n  if (data.length > 0) {\n    return {\n      type: 'LOGIN_EMAIL_COMPLETED',\n      payload: true\n    }\n  } else {\n    return {\n      type: 'LOGIN_EMAIL_COMPLETED',\n      payload: false\n    }\n  }\n}\nexport const loginPasswordChange = (data) => {\n  return {\n    type: 'LOGIN_PASSWORD_CHANGE',\n    payload: data\n  }\n}\nexport const loginPasswordCompleted = (data) => {\n  if (data.length > 0){\n    return {\n      type: 'LOGIN_PASSWORD_COMPLETED',\n      payload: true\n    }\n  } else {\n    return {\n      type: 'LOGIN_PASSWORD_COMPLETED',\n      payload: false\n    }\n  }\n}","//REACT IMPORTS\nimport React, {useEffect} from 'react';\n\n//AUTH\nimport Auth from '../utils/auth.js';\n\n//REDUX IMPORTS\nimport { useSelector, useDispatch } from 'react-redux';\n\n//GRAPHQL IMPORTS\nimport { useMutation } from '@apollo/react-hooks';\nimport { ADD_USER } from '../utils/mutations';\n\n\n//ACTIONS IMPORT for signup formstate reducer\nimport {\n  signupUsernameChange,\n  signupUsernameCompleted,\n  signupEmailChange,\n  signupEmailCompleted,\n  signupPasswordChange,\n  signupPasswordCompleted\n} from '../actions/signup-form-actions';\n\nconst Signup = () => {\n  //OBSERVE GLOBAL SIGNUP FORM STATE\n  const signupFormState = useSelector(state => state.signupForm);\n  //console.log(signupFormState);\n  //GRAB PIECE OF STATE\n  const {\n    username,\n    email,\n    password,\n    usernameIsComplete,\n    emailIsComplete,\n    passwordIsComplete\n  } = signupFormState;\n  \n  //REDUX DISPATCH\n  const dispatchREDUX = useDispatch();\n\n  //ESTABLISH GRAPHQL SIGNUP MUTATION\n  const [addUser, { error }] = useMutation(ADD_USER);\n  \n  //FUNCTION TO HANDLE FORM SUBMIT TO GRAPHQL MUTATION\n  async function handleSubmit(event){\n    event.preventDefault();\n    try {\n      const mutationResponse = await addUser\n      (\n        {\n          variables: {\n            username: username,\n            email: email,\n            password: password\n          }\n        }\n      );\n      //generate a token for the user signing up\n      // get the token back from the \n      // graphql returned object of the mutation\n      const token = mutationResponse.data.addUser.token;\n      //authorize token and send user to home page\n      Auth.login(token);\n    } catch(err) {\n      console.log(err);\n    }\n  } \n\n  function handleChange(event) {\n    if (event.target.type === 'text') {\n      dispatchREDUX(signupUsernameChange(event.target.value));\n      dispatchREDUX(signupUsernameCompleted(event.target.value));\n    }\n    if (event.target.type === 'email') {\n      dispatchREDUX(signupEmailChange(event.target.value));\n      dispatchREDUX(signupEmailCompleted(event.target.value));\n    }\n    if (event.target.type === 'password') {\n      dispatchREDUX(signupPasswordChange(event.target.value));\n      dispatchREDUX(signupPasswordCompleted(event.target.value));\n    }\n  }\n\n  return (\n    <>\n    <div\n      className=\"form-container\"\n    >\n      <form \n        className=\"form-card\"\n        onSubmit={handleSubmit}\n      >\n        <label\n          htmlFor=\"username\"\n          className=\"form-username-label\"\n        >\n          Username:\n        </label>\n        <input \n          type=\"text\"\n          name=\"username\"\n          onChange={handleChange}\n          placeholder=\"Username\"\n          className=\"form-username-input\"\n          autoComplete=\"off\"\n        />\n        <label\n          htmlFor=\"email\"\n          className=\"form-email-label\"\n        >\n          Email:\n        </label>\n        <input \n          type=\"email\"\n          name=\"email\"\n          onChange={handleChange}\n          placeholder=\"Email\"\n          className=\"form-email-input\"\n          autoComplete=\"off\"\n        />\n        <label\n          htmlFor=\"password\"\n          className=\"form-password-label\"\n        >\n          Password:\n        </label>\n        <input \n          className=\"form-password-input\"\n          type=\"password\"\n          name=\"password\"\n          onChange={handleChange}\n          placeholder=\"Password\"\n          autoComplete=\"off\"\n        />\n        {\n          error \n          ?\n          (\n            <>\n              <div\n                style={{color: 'red'}}\n              >\n                An error happened during the signup process!\n              </div>\n            </>\n          )\n          : null\n        }\n        <div\n          className=\"form-button-container\"\n        >\n          <button\n            type=\"submit\"\n            disabled={false}\n            className ='form-btn'\n          >\n            Sign Up\n          </button>\n        </div> \n      </form>\n    </div>\n    </>\n  );\n};\n\nexport default Signup;","export const signupUsernameChange = (data) => {\n  return {\n    type: 'SIGNUP_USERNAME_CHANGE',\n    payload: data\n  }\n}\nexport const signupUsernameCompleted = (data) => {\n  if (data.length > 0) {\n    return {\n      type: 'SIGNUP_USERNAME_COMPLETED',\n      payload: true\n    }\n  } else {\n    return {\n      type: 'SIGNUP_USERNAME_COMPLETED',\n      payload: false\n    }\n  }\n}\nexport const signupEmailChange = (data) => {\n  return {\n    type: 'SIGNUP_EMAIL_CHANGE',\n    payload: data\n  }\n}\nexport const signupEmailCompleted = (data) => {\n  if (data.length > 0) {\n    return {\n      type: 'SIGNUP_EMAIL_COMPLETED',\n      payload: true\n    }\n  } else {\n    return {\n      type: 'SIGNUP_EMAIL_COMPLETED',\n      payload: false\n    }\n  }\n}\nexport const signupPasswordChange = (data) => {\n  return {\n    type: 'SIGNUP_PASSWORD_CHANGE',\n    payload: data\n  }\n}\nexport const signupPasswordCompleted = (data) => {\n  if (data.length > 0) {\n    return {\n      type: 'SIGNUP_PASSWORD_COMPLETED',\n      payload: true\n    }\n  } else {\n    return {\n      type: 'SIGNUP_PASSWORD_COMPLETED',\n      payload: false\n    }\n  }\n}","//IMPORT REACT\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n//ROUTER\n// import {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\n\n//APOLLO\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport ApolloClient from 'apollo-boost';\n\n// //AUTH\nimport Auth from './utils/auth.js';\n\n//CSS\nimport './index.css';\n\n// //COMPONENTS\nimport SplashHeader from './components/SplashHeader';\n\n//PAGES\nimport Home from './pages/Home.js';\nimport Login from './pages/Login.js';\nimport Signup from './pages/Signup.js';\n\n//establish apollo client with apollo server\nconst client = new ApolloClient({\n  request: (operation) => {\n    const gotToken = Auth.getToken();\n    // const token = localStorage.getItem('id_token');\n    operation.setContext({\n      headers: {\n        authorization: gotToken ? `Bearer ${gotToken}` : ''\n      }\n    });\n  },\n  uri: '/graphql'\n});\n\nconst App = () => {\n  return (\n    <>\n      <ApolloProvider client={client}>\n        <Router>\n          <SplashHeader />\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/signup\" component={Signup} />\n          </Switch>\n        </Router>\n      </ApolloProvider>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const isLoggedInReducer = (\nstate = false, \naction) => {\n  switch(action.type) {\n    case 'LOGIN':\n      return true;\n    case 'LOGOUT':\n      return false;\n    default: \n      return state;\n  }\n};\n\nexport default isLoggedInReducer;\n\n//check when a jwt expires and log \n// the user out of the UI?","const ledChangeReducer = (\n  state = {\n    alpha: 1,\n    presetName: undefined,\n    animationDurationState: '4s',\n    animationDelayState: '.5s',\n    isInverted: false\n  },\n  action) => \n{\n  switch(action.type) {\n\n    case 'LOAD_USER_SPLASH_CONFIG':\n      let newState = {\n        alpha: action.payload.alpha,\n        presetName: action.payload.presetName,\n        animationDurationState: action.payload.animationDuration,\n        animationDelayState: action.payload.animationDelay,\n      }\n      return {\n        ...state,\n        // alpha: action.payload.alpha,\n        // presetName: action.payload.presetName,\n        // animationSpeed: action.payload.animationSpeed,\n        // animationDelay: action.payload.animationDelay,\n        // isAnimating: action.payload.isAnimating\n        newState\n      }\n    case 'INVERT_SWITCH': \n      return {\n        ...state,\n        isInverted: !action.payload\n      }\n    case 'PRESET_SWITCH':\n      return {\n        ...state,\n        presetName: action.payload\n      }\n    case 'ANIMATION_DELAY_CHANGE':\n      return {\n        ...state,\n        animationDelayState: action.payload\n      }\n    case 'ANIMATION_DURATION_CHANGE':\n      return {\n        ...state,\n        animationDurationState: action.payload\n      }\n    case 'STOP_ANIMATING':\n      //on click happen first before preset animation starts again\n      // happens immediately\n      return {\n        ...state,\n        isAnimating: action.payload\n      }\n    case 'ALPHA_FADER_CHANGE':\n      return {\n        ...state,\n        alpha: action.payload\n      }\n    default: return state\n  }\n};\n\nexport default ledChangeReducer;","const sketchOneReducer = (\n  state = {\n    isOn: false,\n}, action) => {\n  switch(action.type) {\n    case 'SKETCH_ONE_ON':\n      return {\n        ...state,\n        isOn: action.payload\n      }\n    default: return state\n  };\n};\n\nexport default sketchOneReducer;","const sketchTwoReducer = (\n  state = {\n    isOn: false\n}, action) => {\n  switch(action.type) {\n    case 'SKETCH_TWO_ON':\n      return {\n        ...state,\n        isOn: action.payload\n      }\n    default: return state\n  };\n};\n\nexport default sketchTwoReducer;","const loginFormReducer = (\n  state = {\n    email: '',\n    emailIsComplete: false,\n    password: '',\n    passwordIsComplete: false\n}, action) => \n{\n  switch(action.type) {\n    case 'LOGIN_EMAIL_CHANGE':\n      return {\n        ...state,\n        email: action.payload\n      }\n    case 'LOGIN_EMAIL_COMPLETED':\n      return {\n        ...state,\n        emailIsComplete: action.payload\n      }\n    case 'LOGIN_PASSWORD_CHANGE':\n      return {\n        ...state,\n        password: action.payload\n      }\n    case 'LOGIN_PASSWORD_COMPLETED':\n      return {\n        ...state,\n        passwordIsComplete: action.payload\n      }\n    default: return state;\n  };\n};\n\nexport default loginFormReducer;","const signupFormReducer = (\n  state = {\n    username: '',\n    usernameIsComplete: false,\n    email: '',\n    emailIsComplete: false,\n    password: '',\n    passwordIsComplete: false\n}, action) =>\n{\n  switch(action.type) {\n    case 'SIGNUP_USERNAME_CHANGE':\n      return {\n        ...state,\n        username: action.payload\n      }\n    case 'SIGNUP_USERNAME_COMPLETED':\n      return {\n        ...state,\n        usernameIsComplete: action.payload\n      }\n    case 'SIGNUP_EMAIL_CHANGE':\n      return {\n        ...state,\n        email: action.payload\n      }\n    case 'SIGNUP_EMAIL_COMPLETED':\n      return {\n        ...state,\n        emailIsComplete: action.payload\n      }\n    case 'SIGNUP_PASSWORD_CHANGE':\n      return {\n        ...state,\n        password: action.payload\n      }\n    case 'SIGNUP_PASSWORD_COMPLETED':\n      return {\n        ...state,\n        passwordIsComplete: action.payload\n      }\n    default: return state\n  };\n};\n\nexport default signupFormReducer;","const artScrollerReducer = (\n  state = {\n    isOnState: false,\n    gifs: [],\n    scrollInterval: 1000,\n    searchTerms: [],\n    searchIsValid: false\n  },\n  action\n) => {\n  switch(action.type) {\n    case 'VERIFY_IS_ON':\n      return {\n        ...state,\n       isOn: action.payload\n      }\n    case 'GET_GIFS':\n      return {\n        ...state,\n        gifs: action.payload\n      }\n    case 'SCROLL_INTERVAL_CHANGE':\n      return {\n        ...state,\n        scrollInterval: action.payload\n      }\n    case 'SEARCH_TERM_CHANGE':\n      return {\n        ...state,\n        searchTerms: action.payload\n      }\n    case 'SEARCH_VALIDATE': \n      return {\n        ...state,\n        searchIsValid: action.payload\n      }\n    default: return state\n  }\n};\n\nexport default artScrollerReducer;","import isLoggedIn from './isLoggedIn.js';\nimport ledChangeReducer from './ledChange.js';\nimport sketchOneReducer from './sketchOne.js';\nimport sketchTwoReducer from './sketchTwo.js';\nimport loginFormReducer from './loginFormReducer.js';\nimport signupFormReducer from './signupFormReducer.js';\nimport artScrollerReducer from './artScrollerReducer.js';\nimport { combineReducers } from 'redux';\n\nconst allReducers = combineReducers(\n  {\n    isLoggedIn: isLoggedIn,\n    ledChange: ledChangeReducer,\n    sketchOne: sketchOneReducer,\n    sketchTwo: sketchTwoReducer,\n    loginForm: loginFormReducer,\n    signupForm: signupFormReducer,\n    artScroller: artScrollerReducer\n  }\n)\n\nexport default allReducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\n//something to consider, \n// different way to make component hooks\n// import React from 'react';\n\n// const MyComponents = {\n//   DatePicker: function DatePicker(props) {\n//     return <div>Imagine a {props.color} datepicker here.</div>;\n//   }\n// }\n\n// function BlueDatePicker() {\n//   return <MyComponents.DatePicker color=\"blue\" />;\n// }\n\n//REDUX\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport allReducers from './reducers';\nconst store = createStore(\n  allReducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n//console.log(store);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n\nserviceWorkerRegistration.register();"],"sourceRoot":""}