{"version":3,"sources":["components/AudioPlayer/index.js","actions/led-actions/index.js","components/BigLedBox/index.js","App.js","reducers/isLoggedIn.js","reducers/ledChange.js","reducers/sketchOne.js","reducers/sketchTwo.js","reducers/index.js","index.js"],"names":["AudioPlayer","reactAudioPlayer","useState","currentSong","setCurrentSong","songSelect","event","preventDefault","persist","target","href","console","log","parentElement","firstChild","play","src","controls","autoPlay","ref","element","onClick","id","className","presetSwitch","data","type","payload","BigLedBox","ledChangeState","useSelector","state","ledChange","alpha","isAnimating","presetName","animationDurationState","dispatchREDUX","animationDelay","useDispatch","animationDelayState","setAnimationDelayState","animationSpeedState","setAnimationSpeedState","useEffect","leds","rows","i","push","ledNumber","ledRowNumber","createLedObjectsArray","num","rowNumber","createLedRowsArray","min","max","value","onChange","toString","style","color","map","row","index","led","animationDuration","client","ApolloClient","request","operation","token","localStorage","getItem","setContext","headers","authorization","uri","App","isLoggedInReducer","action","ledChangeReducer","newState","sketchOneReducer","isOn","sketchTwoReducer","allReducers","combineReducers","isLoggedIn","sketchOne","sketchTwo","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d1a2b404.chunk.js","sourcesContent":["import React, {useState} from 'react';\n\n\n\nfunction AudioPlayer() {\n  const [currentSong, setCurrentSong] = useState('./music/128-waterfall.m4a')\n\n  function songSelect(event) {\n    event.preventDefault();\n    event.persist();\n    setCurrentSong(event.target.href);\n    console.log(event.target.parentElement.parentElement.parentElement.firstChild.play)\n    //event.target.parentElement.parentElement.parentElement.firstChild.play();\n    // console.log(event.target.parentElement.parentElement.parentElement.firstChild.play());\n    console.log(event.target.href);\n  }\n  let reactAudioPlayer;\n  return (\n    <>\n      <audio \n        src={currentSong}\n        controls\n        autoPlay={true}\n        ref={(element) => reactAudioPlayer = element}\n        onClick={\n          () => {\n            console.log(reactAudioPlayer)\n          }\n        }\n      >\n\n      </audio>\n      <ul id=\"playlist\">\n        <li className=\"current-song\">\n            <a\n              href=\"./music/128-waterfall.m4a\"\n              onClick={songSelect}\n            >\n              1\n            </a>\n        </li>\n        <li className=\"\">\n            <a\n              href=\"./music/Faxing-Zagreb.m4a\" \n              onClick={songSelect}\n            >\n              2\n            </a>\n        </li>\n      </ul>\n    </>\n  );\n};\n\nexport default AudioPlayer;","//LED CHANGE ACTIONS\nexport const loadUserSplashConfig = (preset) => {\n  return {\n    type: 'LOAD_USER_SPLASH_CONFIG',\n    payload: {\n      presetName: preset.presetName,\n      animationDelayState: preset.animationDelayState,\n      animationDurationState: preset.animationDurationState\n    }\n  };\n};\nexport const presetSwitch = (data) => {\n  return {\n    type: 'PRESET_SWITCH',\n    payload: data\n  };\n};\nexport const animationDurationChange = (data) => {\n  return {\n    type: 'ANIMATION_DURATION_CHANGE',\n    payload: data\n  }\n}\nexport const animationDelayChange = (data) => {\n  return {\n    type: 'ANIMATION_DELAY_CHANGE',\n    payload: data\n  }\n}\nexport const alphaFaderChange = (data) => {\n  return {\n    type: 'ALPHA_FADER_CHANGE',\n    payload: data\n  };\n};\n//save class property values that are changed by faders?\n//animation duration\nexport const savePresetName = (data) => {\n  return {\n    type: 'SAVE_PRESET_NAME',\n    payload: data\n  };\n};\n//on mouse up?? transition from position in \n// animation to beginning of current animation or \nexport const isAnimating = (data) => {\n  return {\n    type: 'IS_ANIMATING',\n    payload: data\n  };\n};\n//on click (mouse down and up)???\nexport const stopAnimating = (data) => {\n  return {\n    type: 'STOP_ANIMATING',\n    payload: data\n  };\n};","//IMPORT REACT\nimport React, { useState, useEffect } from 'react';\n// import './rainbowV2/styles/style.css';\n// import './rainbowStart/styles/style.css';\n\n//REDUX\nimport {useSelector, useDispatch} from 'react-redux';\n\n//ACTIONS\nimport { \n  loadUserSplashConfig,\n  presetSwitch,\n  animationDelayChange,\n  animationDurationChange,\n  alphaFaderChange,\n} from '../../actions/led-actions';\n\nconst BigLedBox = () => {\n  //functions to create the columns and rows to render\n\n\n  //query first preset in the array of the user's\n  // list of preset names, this will have all the animation parameter styles for \n  // each row of LEDs\n  // this will trigger loadUserSplashConfig action on load \n  //(useEffect to wait until data arrives and execute dispatch action once data arrives\n  // from graphql query\n  \n  //REDUX GLOBAL STATE\n  const ledChangeState = useSelector(state => state.ledChange);\n  console.log(ledChangeState);\n  //REDUX piece of global state\n  const {\n    alpha,\n    isAnimating,\n    presetName,\n    animationDurationState,\n    animationDelay\n  } = ledChangeState;\n  \n  const dispatchREDUX = useDispatch();\n\n  const [animationDelayState, setAnimationDelayState] = useState(0);\n  function animationDelaySliderChange(event) {\n    setAnimationDelayState(event.target.value);\n    // console.log(((event.target.value) / 100).toString());\n    dispatchREDUX(animationDelayChange((event.target.value / 100).toString()));\n  } \n\n  const [animationSpeedState, setAnimationSpeedState] = useState(0);\n  \n  function animationSpeedSliderChange(event) {\n    setAnimationSpeedState(event.target.value);\n    dispatchREDUX(animationDurationChange((event.target.value / 100).toString()));\n  }\n  useEffect(() => {\n\n  }, [animationDurationState])\n\n  const leds = [];\n  function createLedObjectsArray() {\n    for (let i = 1; i < 33; i++) {\n      leds.push(\n        // <>\n        //   <div\n        //    className={`led${i}-${num}`}\n        //    key={`led${i}-${num}`}\n        //   ></div>\n        // </>\n        {\n          ledNumber: i,\n          ledRowNumber: 33 - i\n        }\n      );\n    }\n    // console.log(leds);\n    return leds;\n  }\n  // const createLeds = (num) => {\n  //   elementText = '';\n  //   for (let i = 1; i < 33; i++) {\n  //     elementText += `\n  //       <div class=\"led${i}-${num}\"></div>\n  //     `;\n  //   };\n  //   return elementText;\n  // }\n\n  // {\n  //   leds.map((led, index) => (\n  //     <div className={`led${i}-${index + 1}`} key={`led${i}-${index + num}`}></div>\n  //   ))\n  // }\n\n  const rows = [];\n  function createLedRowsArray(num) {\n    for (let i = 1; i < num; i++) {\n      rows.push(\n        {\n          rowNumber: i\n        }\n      );\n    }\n    // console.log(rows);\n    return rows;\n  }\n  // const createRows = (num) => {\n  //   let elementText = '';\n  //   for ( let i = 1; i < num; i++ ){\n  //     elementText += `\n  //     <div class=\"row${i}\">\n  //       ${createLeds(i)}\n  //     </div>\n  //     `\n  //   }\n  //   return elementText;\n  // };\n\n\n  createLedObjectsArray(33);\n  createLedRowsArray(33);\n  return (\n    <main className=\"box-style\">\n      <div className=\"slidecontainer\">\n        <input \n          type=\"range\" \n          min=\"0\" \n          max=\"100\" \n          value={animationDelayState} \n          className=\"slider\" \n          id=\"myRange\"\n          onChange={animationDelaySliderChange}\n        />\n        <p style={{color: 'white'}}>animation delay: {animationDelayState}</p>\n        <input \n          type=\"range\" \n          min=\"0\" \n          max=\"100\" \n          value={animationSpeedState} \n          className=\"slider\" \n          id=\"myRange\"\n          onChange={animationSpeedSliderChange}\n        />\n        <p style={{color: 'white'}}>animation speed: {animationSpeedState}</p>\n      </div>\n      <button\n        onClick={() => {\n          dispatchREDUX(presetSwitch(''))\n        }}\n      >\n        rainbowTest\n      </button>\n      <button\n        onClick={() => {\n          dispatchREDUX(presetSwitch('V2'))\n        }}\n      >\n        rainbowV2\n      </button>\n      {\n        rows.map((row, index) => (\n          <div key={`row${index + 1}`} className={`row${index + 1}`}>\n            {\n              leds.map((led, index) => (\n                <div \n                  key={`led${led.ledNumber}-${index + 1}`} \n                  className={`led${index + 1}-${row.rowNumber}${presetName}`}\n                  style={{animationDuration: `${animationDurationState}`}}\n                ></div>\n              ))\n            }\n          </div>\n        ))\n      }\n    </main>\n  );\n};\n\nexport default BigLedBox;","//IMPORT REACT\nimport React from 'react';\n//ROUTER\n// import {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\n//APOLLO\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport ApolloClient from 'apollo-boost';\n\n//CSS\nimport './index.css';\n\n\n//COMPONENTS\nimport AudioPlayer from './components/AudioPlayer';\nimport BigLedBox from './components/BigLedBox';\n\n//establish apollo client with apollo server\nconst client = new ApolloClient({\n  request: (operation) => {\n    const token = localStorage.getItem('id_token');\n    operation.setContext({\n      headers: {\n        authorization: token ? `Bearer ${token}` : ''\n      }\n    });\n  },\n  uri: '/graphql'\n});\n\nconst App = () => {\n  return (\n    <>\n      <ApolloProvider client={client}>\n        <AudioPlayer/>\n        <BigLedBox />\n      </ApolloProvider>\n    </>\n  );\n}\n\nexport default App;\n","const isLoggedInReducer = (\nstate = false, \naction) => {\n  switch(action.type) {\n    case 'LOGIN':\n      return true;\n    case 'LOGOUT':\n      return false;\n    default: \n      return state;\n  }\n};\n\nexport default isLoggedInReducer;\n\n//check when a jwt expires and log \n// the user out of the UI?","const ledChangeReducer = (\n  state = {\n    alpha: 1,\n    presetName: '',\n    animationDurationState: '4s',\n    animationDelayState: '.5s',\n  },\n  action) => \n{\n  switch(action.type) {\n\n    case 'LOAD_USER_SPLASH_CONFIG':\n      let newState = {\n        alpha: action.payload.alpha,\n        presetName: action.payload.presetName,\n        animationDurationState: action.payload.animationDuration,\n        animationDelayState: action.payload.animationDelay,\n      }\n      return {\n        ...state,\n        // alpha: action.payload.alpha,\n        // presetName: action.payload.presetName,\n        // animationSpeed: action.payload.animationSpeed,\n        // animationDelay: action.payload.animationDelay,\n        // isAnimating: action.payload.isAnimating\n        newState\n      }\n    case 'PRESET_SWITCH':\n      return {\n        ...state,\n        presetName: action.payload\n      }\n    case 'ANIMATION_DELAY_CHANGE':\n      return {\n        ...state,\n        animationDelayState: action.payload\n      }\n    case 'ANIMATION_DURATION_CHANGE':\n      return {\n        ...state,\n        animationDurationState: action.payload\n      }\n    case 'STOP_ANIMATING':\n      //on click happen first before preset animation starts again\n      // happens immediately\n      return {\n        ...state,\n        isAnimating: action.payload\n      }\n    case 'ALPHA_FADER_CHANGE':\n      return {\n        ...state,\n        alpha: action.payload\n      }\n    default: return state\n  }\n};\n\nexport default ledChangeReducer;","const sketchOneReducer = (\n  state = {\n    isOn: false,\n}, action) => {\n  switch(action.type) {\n    case 'SKETCH_ONE_ON':\n      return {\n        ...state,\n        isOn: action.payload\n      }\n    default: return state\n  };\n};\n\nexport default sketchOneReducer;","const sketchTwoReducer = (\n  state = {\n    isOn: false\n}, action) => {\n  switch(action.type) {\n    case 'SKETCH_TWO_ON':\n      return {\n        ...state,\n        isOn: action.payload\n      }\n    default: return state\n  };\n};\n\nexport default sketchTwoReducer;","import isLoggedIn from './isLoggedIn.js';\nimport ledChangeReducer from './ledChange.js';\nimport sketchOneReducer from './sketchOne.js';\nimport sketchTwoReducer from './sketchTwo.js';\nimport { combineReducers } from 'redux';\n\nconst allReducers = combineReducers(\n  {\n    isLoggedIn: isLoggedIn,\n    ledChange: ledChangeReducer,\n    sketchOne: sketchOneReducer,\n    sketchTwo: sketchTwoReducer\n  }\n)\n\nexport default allReducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './components/BigLedBox/rainbowStart/styles/style.css';\nimport './components/BigLedBox/rainbowV2/styles/style.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\n//something to consider...\n// import React from 'react';\n\n// const MyComponents = {\n//   DatePicker: function DatePicker(props) {\n//     return <div>Imagine a {props.color} datepicker here.</div>;\n//   }\n// }\n\n// function BlueDatePicker() {\n//   return <MyComponents.DatePicker color=\"blue\" />;\n// }\n\n//REDUX\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport allReducers from './reducers';\nconst store = createStore(\n  allReducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\nconsole.log(store);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}